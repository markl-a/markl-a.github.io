<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Code, Tech &amp; Life 程式, 技術, 人生札記</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-28T04:50:46.907Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Someone&#39;s English is suck 賴老頭</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[leetcode 11]</title>
    <link href="http://yoursite.com/2019/06/28/leetcode-11-Container-With-Most-Water/"/>
    <id>http://yoursite.com/2019/06/28/leetcode-11-Container-With-Most-Water/</id>
    <published>2019-06-28T04:08:44.000Z</published>
    <updated>2019-06-28T04:50:46.907Z</updated>
    
    <content type="html"><![CDATA[<h3 id="leetcode-11-Container-With-Most-Water"><a href="#leetcode-11-Container-With-Most-Water" class="headerlink" title="[leetcode ] 11.Container With Most Water"></a>[leetcode ] 11.<a href="https://leetcode.com/problems/container-with-most-water/" target="_blank" rel="noopener">Container With Most Water</a></h3><blockquote><p>Given n non-negative integers a<font size="2">1</font>, a<font size="2">2</font>, …, a<font size="2">n</font> , where each represents a point at coordinate (i, a<font size="2">i</font>). n vertical lines are drawn such that the two endpoints of line i is at (i, a<font size="2">i</font>) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.</p></blockquote><blockquote><p>Note: You may not slant the container and n is at least 2.<br>The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue &gt;section) the container can contain is 49.</p></blockquote><ul><li><p>Example:</p></li><li><ul><li>Input: [1,8,6,2,5,4,8,3,7]</li></ul></li><li><ul><li>Output: 49</li></ul></li></ul><h3 id="簡中的敘述-來自leetcode-cn-com"><a href="#簡中的敘述-來自leetcode-cn-com" class="headerlink" title="簡中的敘述- 來自leetcode-cn.com"></a>簡中的敘述- 來自<a href="https://leetcode-cn.com/problems/container-with-most-water/" target="_blank" rel="noopener">leetcode-cn.com</a></h3><blockquote><p>给定 n 个非负整数 a<font size="2">1</font>，a<font size="2">2</font>，…，a<font size="2">n</font>，每个数代表坐标中的一个点 (i, a<font size="2">i</font>) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, a<font size="2">i</font>) 和 (i, 0)。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</p></blockquote><blockquote><p>说明：你不能倾斜容器，且 n 的值至少为 2。</p></blockquote><blockquote><p>图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。</p></blockquote><ul><li><p>示例:</p></li><li><ul><li>输入: [1,8,6,2,5,4,8,3,7]</li></ul></li><li><ul><li>输出: 49</li></ul></li></ul><p>Solution:</p><p>思路:</p><p>C++:</p><p>Java:</p><p>Python 3:</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;leetcode-11-Container-With-Most-Water&quot;&gt;&lt;a href=&quot;#leetcode-11-Container-With-Most-Water&quot; class=&quot;headerlink&quot; title=&quot;[leetcode ] 11.Con
      
    
    </summary>
    
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>一段時間沒用hexo可能會出現的問題</title>
    <link href="http://yoursite.com/2019/06/02/%E4%B8%80%E6%AE%B5%E6%99%82%E9%96%93%E6%B2%92%E7%94%A8hexo%E5%8F%AF%E8%83%BD%E6%9C%83%E5%87%BA%E7%8F%BE%E7%9A%84%E5%95%8F%E9%A1%8C/"/>
    <id>http://yoursite.com/2019/06/02/一段時間沒用hexo可能會出現的問題/</id>
    <published>2019-06-01T22:59:28.000Z</published>
    <updated>2019-06-02T01:15:39.723Z</updated>
    
    <content type="html"><![CDATA[<h3 id="因為我之前一段時間都很忙-懶-的關係，很久沒更新-富堅-。"><a href="#因為我之前一段時間都很忙-懶-的關係，很久沒更新-富堅-。" class="headerlink" title="因為我之前一段時間都很忙(懶)的關係，很久沒更新(富堅)。"></a>因為我之前一段時間都很忙(懶)的關係，很久沒更新(富堅)。</h3><p>在此我很抱歉(其實並沒有)　哈哈</p><p>在重新使用的時候，因為各種原因原本的設定都跑掉了。</p><p>假如檔案都在的話，目前有兩個方法：</p><p>1.重裝。</p><p>2.在windows的環境變量PATH上面添加NPM跟hexo的路徑。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;因為我之前一段時間都很忙-懶-的關係，很久沒更新-富堅-。&quot;&gt;&lt;a href=&quot;#因為我之前一段時間都很忙-懶-的關係，很久沒更新-富堅-。&quot; class=&quot;headerlink&quot; title=&quot;因為我之前一段時間都很忙(懶)的關係，很久沒更新(富堅)。&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="troubleshooting" scheme="http://yoursite.com/tags/troubleshooting/"/>
    
  </entry>
  
  <entry>
    <title>repost</title>
    <link href="http://yoursite.com/2018/10/13/repost/"/>
    <id>http://yoursite.com/2018/10/13/repost/</id>
    <published>2018-10-13T02:37:11.000Z</published>
    <updated>2018-10-13T03:01:55.179Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一則線上IT課程公司的焦慮販賣廣告"><a href="#一則線上IT課程公司的焦慮販賣廣告" class="headerlink" title="一則線上IT課程公司的焦慮販賣廣告"></a>一則線上IT課程公司的焦慮販賣廣告</h1><p>吸睛標題如下:<a href="https://blog.csdn.net/csdnnews/article/details/83026911" target="_blank" rel="noopener">编程地震！这个事情影响到 @ 所有程序员！</a></p><p>看完發現好焦慮，不買一下課程對得起自己嗎？　顆顆。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一則線上IT課程公司的焦慮販賣廣告&quot;&gt;&lt;a href=&quot;#一則線上IT課程公司的焦慮販賣廣告&quot; class=&quot;headerlink&quot; title=&quot;一則線上IT課程公司的焦慮販賣廣告&quot;&gt;&lt;/a&gt;一則線上IT課程公司的焦慮販賣廣告&lt;/h1&gt;&lt;p&gt;吸睛標題如下:&lt;a 
      
    
    </summary>
    
    
      <category term="Trend" scheme="http://yoursite.com/tags/Trend/"/>
    
  </entry>
  
  <entry>
    <title>Tech News 10/11/18</title>
    <link href="http://yoursite.com/2018/10/11/Tech-News-10-11-18/"/>
    <id>http://yoursite.com/2018/10/11/Tech-News-10-11-18/</id>
    <published>2018-10-11T05:14:10.000Z</published>
    <updated>2018-10-11T07:06:58.686Z</updated>
    
    <content type="html"><![CDATA[<h1 id="20181011-AR-VR-and-AI相關的新聞連結"><a href="#20181011-AR-VR-and-AI相關的新聞連結" class="headerlink" title="20181011:AR,VR and AI相關的新聞連結"></a>20181011:AR,VR and AI相關的新聞連結</h1><p>Magic Leap感覺很多想法都很不錯，也有其他協力的廠商。不過假如不能在生產力應用或實用性上超過一般的</p><p>筆記本電腦或手機，那大概就是另外一種的螢幕＋外設、電玩主機或電玩廳裡的設備。</p><p>感覺Magic Leap有點畫大餅的傾向，哈哈。能帶的出門感覺恥力要很高，呵呵。</p><ul><li><p><a href="https://36kr.com/p/5156616.html/" target="_blank" rel="noopener">Magic Leap开发者大会回顾，AR社交/AI助理/大量游戏应用都来了</a></p></li><li><p><a href="https://36kr.com/p/5155409.html" target="_blank" rel="noopener">你想要的“虚拟梦境”，目前这些VR大厂真的给不起啊！</a>    </p></li></ul><p>AI相關的新聞:</p><p>感覺機器學習的應用可能會深入到硬體上，而相關的研發和開發門檻可能更低而做到頂尖的時間可能會變得更長。</p><ul><li><p><a href="http://teks.co.in/site/blog/machine-learning-in-2019-tracing-the-artificial-intelligence-growth-path/" target="_blank" rel="noopener">Machine Learning in 2019: Tracing The Artificial Intelligence Growth Path</a></p></li><li><p><a href="https://www.jiqizhixin.com/articles/2018-10-10-10" target="_blank" rel="noopener">2款AI芯片、深度学习框架MindSpore：华为史无前例集中发布AI战略</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;20181011-AR-VR-and-AI相關的新聞連結&quot;&gt;&lt;a href=&quot;#20181011-AR-VR-and-AI相關的新聞連結&quot; class=&quot;headerlink&quot; title=&quot;20181011:AR,VR and AI相關的新聞連結&quot;&gt;&lt;/a&gt;20
      
    
    </summary>
    
    
      <category term="Trend" scheme="http://yoursite.com/tags/Trend/"/>
    
  </entry>
  
  <entry>
    <title>interview preparation</title>
    <link href="http://yoursite.com/2018/10/10/interview-preparation/"/>
    <id>http://yoursite.com/2018/10/10/interview-preparation/</id>
    <published>2018-10-10T13:51:34.000Z</published>
    <updated>2018-10-10T14:20:02.237Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面試準備方法"><a href="#面試準備方法" class="headerlink" title="面試準備方法"></a>面試準備方法</h1><p>通常一般人收到公司的面試邀請時，大概都了解之前申請的工作內容和公司大致的作風。</p><p>接下來就是google怎麼面試這樣，網路上通常都蠻多前行者的心得。</p><p>可以在github搜索 “ interview OR 秋招 OR 春招 OR 面試 OR 筆試 “   ，</p><p>或者在google上輸入” interview OR 秋招 OR 春招 OR 面試 OR 筆試  site:github.com “ 。</p><p>台灣這邊的面試流程可以參考這個例子，假如要找前端工程師的面試心得，可google</p><p> “[心得] 面試  前端   site:ptt.cc” 然後再根據狀況自己調整。</p><p> 感覺現在資訊真的是大爆發，很多東西跟方法在網上都找的到，一般人缺的大多是執行力。</p><p> 不過假如有東西你google不到時，也就有可能是你的機會。也可能機會不大，呵呵。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;面試準備方法&quot;&gt;&lt;a href=&quot;#面試準備方法&quot; class=&quot;headerlink&quot; title=&quot;面試準備方法&quot;&gt;&lt;/a&gt;面試準備方法&lt;/h1&gt;&lt;p&gt;通常一般人收到公司的面試邀請時，大概都了解之前申請的工作內容和公司大致的作風。&lt;/p&gt;
&lt;p&gt;接下來就是go
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[Leetcode 10]</title>
    <link href="http://yoursite.com/2018/10/10/Leetcode-10/"/>
    <id>http://yoursite.com/2018/10/10/Leetcode-10/</id>
    <published>2018-10-10T13:10:22.000Z</published>
    <updated>2018-10-11T05:17:22.033Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Leetcode-10-Regular-Expression-Matching"><a href="#Leetcode-10-Regular-Expression-Matching" class="headerlink" title="[Leetcode] 10. Regular Expression Matching"></a>[Leetcode] 10. Regular Expression Matching</h1><script src="https://gist.github.com/markl-a/3134baaa38399c411fb48703368b66de.js"></script><script src="https://gist.github.com/markl-a/6a3f02b67312d3a14d99ffcf4cf508a9.js"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Leetcode-10-Regular-Expression-Matching&quot;&gt;&lt;a href=&quot;#Leetcode-10-Regular-Expression-Matching&quot; class=&quot;headerlink&quot; title=&quot;[Leetcode] 10.
      
    
    </summary>
    
    
      <category term="Leetcode" scheme="http://yoursite.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>recent situation</title>
    <link href="http://yoursite.com/2018/10/09/recent-situation/"/>
    <id>http://yoursite.com/2018/10/09/recent-situation/</id>
    <published>2018-10-09T15:38:37.000Z</published>
    <updated>2018-10-13T02:45:40.191Z</updated>
    
    <content type="html"><![CDATA[<h1 id="近況"><a href="#近況" class="headerlink" title="近況"></a>近況</h1><p>因為最近在找工作，所以日誌內容大概會是面試要準備的內容或是作品。</p><p>找到工作過試用期之後，日誌的內容除了刷題跟工作所用的東西之外</p><p>大概會每兩三個月都以一個技術或技術上的新應用作為主題。</p><p>希望每年都能深入的學到一些技術跟應用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;近況&quot;&gt;&lt;a href=&quot;#近況&quot; class=&quot;headerlink&quot; title=&quot;近況&quot;&gt;&lt;/a&gt;近況&lt;/h1&gt;&lt;p&gt;因為最近在找工作，所以日誌內容大概會是面試要準備的內容或是作品。&lt;/p&gt;
&lt;p&gt;找到工作過試用期之後，日誌的內容除了刷題跟工作所用的東西之外
      
    
    </summary>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>[Leetcode 9]</title>
    <link href="http://yoursite.com/2018/10/03/Leetcode-9/"/>
    <id>http://yoursite.com/2018/10/03/Leetcode-9/</id>
    <published>2018-10-03T04:19:14.000Z</published>
    <updated>2018-10-04T02:02:09.482Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Leetcode-9-Palindrome-Number"><a href="#Leetcode-9-Palindrome-Number" class="headerlink" title="[Leetcode] 9. Palindrome Number"></a>[Leetcode] 9. Palindrome Number</h1><p>Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.<br>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><p>Example 1:</p><p>Input: 121<br>Output: true</p><p>Example 2:</p><p>Input: -121<br>Output: false<br>Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.<br>解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</p><p>Example 3:</p><p>Input: 10<br>Output: false<br>Explanation: Reads 01 from right to left. Therefore it is not a palindrome.<br>Follow up:<br>解释: 从右向左读, 为 01 。因此它不是一个回文数。</p><p>Coud you solve it without converting the integer to a string?<br>你能不将整数转为字符串来解决这个问题吗？</p><p>c++的code，測試寫的比較陽春一點。懶的寫 test case 。<br>目前還沒想到比官方的解法還要快的方法  </p><script src="https://gist.github.com/markl-a/f0d69e64851cd7e35b45956ae40a796d.js"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Leetcode-9-Palindrome-Number&quot;&gt;&lt;a href=&quot;#Leetcode-9-Palindrome-Number&quot; class=&quot;headerlink&quot; title=&quot;[Leetcode] 9. Palindrome Number&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="Leetcode" scheme="http://yoursite.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Jeff Dean&#39;s speech</title>
    <link href="http://yoursite.com/2018/10/03/jeff-dean-speech/"/>
    <id>http://yoursite.com/2018/10/03/jeff-dean-speech/</id>
    <published>2018-10-03T03:19:03.000Z</published>
    <updated>2018-10-04T02:04:05.067Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Deep-Learning-to-Solve-Challenging-Problems"><a href="#Deep-Learning-to-Solve-Challenging-Problems" class="headerlink" title="Deep Learning to Solve Challenging Problems"></a>Deep Learning to Solve Challenging Problems</h1><p>Speech of Jeff Dean, Google Senior Fellow</p><p>感覺是他在科普機器學習在各領域的應用和最近的進展。比較多跟電腦視覺相關的介紹。</p><p>不過NLP領域的東西就沒有太多的介紹，不知道是進展比較小或因為是和搜索領域較為相關。</p><p>可以用2倍速看。開字幕的話，呵呵。</p><p>另外不知道能不能用機器學習做到真正消除人聲或其他噪音的抗噪耳機。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/ljBOzdKuX7A" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Deep-Learning-to-Solve-Challenging-Problems&quot;&gt;&lt;a href=&quot;#Deep-Learning-to-Solve-Challenging-Problems&quot; class=&quot;headerlink&quot; title=&quot;Deep L
      
    
    </summary>
    
    
      <category term="Trend" scheme="http://yoursite.com/tags/Trend/"/>
    
  </entry>
  
  <entry>
    <title>[Leetcode 8]</title>
    <link href="http://yoursite.com/2018/10/02/Leetcode-8/"/>
    <id>http://yoursite.com/2018/10/02/Leetcode-8/</id>
    <published>2018-10-02T11:45:18.000Z</published>
    <updated>2018-10-09T15:22:14.254Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Leetcode-8-String-to-Integer-atoi"><a href="#Leetcode-8-String-to-Integer-atoi" class="headerlink" title="[Leetcode] 8. String to Integer (atoi)"></a>[Leetcode] 8. String to Integer (atoi)</h3><p>Implement atoi which converts a string to an integer.</p><p>The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.</p><p>The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.</p><p>If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.</p><p>If no valid conversion could be performed, a zero value is returned.<br>实现 atoi，将字符串转为整数。</p><p>该函数首先根据需要丢弃任意多的空格字符，直到找到第一个非空格字符为止。如果第一个非空字符是正号或负号，选取该符号，并将其与后面尽可能多的连续的数字组合起来，这部分字符即为整数的值。如果第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成整数。</p><p>字符串可以在形成整数的字符后面包括多余的字符，这些字符可以被忽略，它们对于函数没有影响。</p><p>当字符串中的第一个非空字符序列不是个有效的整数；或字符串为空；或字符串仅包含空白字符时，则不进行转换。</p><p>若函数不能执行有效的转换，返回 0。</p><p>Note:</p><p>Only the space character ‘ ‘ is considered as whitespace character.<br>Assume we are dealing with an environment which could only store integers within the 32-bit      signed integer range: [−2的31次方,  2的31次方 − 1]. If the numerical value is out of the range of representable values, INT_MAX (2的31次方 − 1) or INT_MIN (−2的31次方) is returned.</p><p>Example 1:</p><p>Input: “42”<br>Output: 42</p><p>Example 2:</p><p>Input: “ &ensp; &ensp;   -42”<br>Output: -42   </p><p>Explanation: The first non-whitespace character is ‘-‘, which is the minus sign.<br>             Then take as many numerical digits as possible, which gets 42.<br>             第一个非空白字符为 ‘-‘, 它是一个负号。<br>             我们尽可能将负号与后面所有连续出现的数字组合起来，最后得到 -42 。   </p><p>Example 3:</p><p>Input: “4193 with words”<br>Output: 4193  </p><p>Explanation: Conversion stops at digit ‘3’ as the next character is not a numerical digit.<br>            转换截止于数字 ‘3’ ，因为它的下一个字符不为数字。   </p><p>Example 4:</p><p>Input: “words and 987”<br>Output: 0</p><p>Explanation: The first non-whitespace character is ‘w’, which is not a numerical<br>             digit or a +/- sign. Therefore no valid conversion could be performed.<br>             第一个非空字符是 ‘w’, 但它不是数字或正、负号。<br>     因此无法执行有效的转换。</p><p>Example 5:</p><p>Input: “-91283472332”<br>Output: -2147483648</p><p>Explanation: The number “-91283472332” is out of the range of a 32-bit signed integer.<br>             Thefore INT_MIN (−2的31次方) is returned.<br>             数字 “-91283472332” 超过 32 位有符号整数范围。<br>     因此返回 INT_MIN (−2的31次方) 。</p><p>由於寫的時間比較晚，所以有略為參考其他人寫的才下手。</p><p>C++的code<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line"></span><br><span class="line">    int myAtoi(string str)</span><br><span class="line">    &#123;</span><br><span class="line">        int i =  str.find_first_not_of(&apos; &apos;);</span><br><span class="line">        int sign = 1;//正負</span><br><span class="line">        long num = 0;</span><br><span class="line"></span><br><span class="line">        if(str[i] == &apos;-&apos; || str[i] == &apos;+&apos;)</span><br><span class="line">      sign = (str[i++] == &apos;-&apos;)?-1:1;</span><br><span class="line"></span><br><span class="line">        while(str[i]==&apos;0&apos;) i++;</span><br><span class="line"></span><br><span class="line">        while(isdigit(str[i]))</span><br><span class="line">        &#123;</span><br><span class="line">            num = 10*num + str[i++]-&apos;0&apos;;</span><br><span class="line">            if(num &gt; fabs(long(-2147483648))) break;</span><br><span class="line">        &#125;</span><br><span class="line">        num *= sign;</span><br><span class="line">        if(num &lt; -2147483648) return -2147483648;</span><br><span class="line">        if(num &gt; 2147483647) return 2147483647;</span><br><span class="line">        return num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Leetcode-8-String-to-Integer-atoi&quot;&gt;&lt;a href=&quot;#Leetcode-8-String-to-Integer-atoi&quot; class=&quot;headerlink&quot; title=&quot;[Leetcode] 8. String to In
      
    
    </summary>
    
    
      <category term="Leetcode" scheme="http://yoursite.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>[Leetcode 7]</title>
    <link href="http://yoursite.com/2018/10/01/leetcoe-7/"/>
    <id>http://yoursite.com/2018/10/01/leetcoe-7/</id>
    <published>2018-10-01T06:30:12.000Z</published>
    <updated>2018-10-04T02:02:34.089Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Leetcode-7-Reverse-Integer"><a href="#Leetcode-7-Reverse-Integer" class="headerlink" title="[Leetcode] 7. Reverse Integer"></a>[Leetcode] 7. Reverse Integer</h3><p>Given a 32-bit signed integer, reverse digits of an integer.</p><p>Example 1:</p><p>Input: 123<br>Output: 321<br>Example 2:</p><p>Input: -123<br>Output: -321<br>Example 3:</p><p>Input: 120<br>Output: 21</p><p>簡單來說就是反轉數值，不過正負不變。</p><p>c++的code<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int reverse(int x) &#123;</span><br><span class="line">    int y = 0;</span><br><span class="line">    while (x!=0)</span><br><span class="line">    &#123;      </span><br><span class="line">        if ( abs(y) &gt; INT_MAX / 10)return 0;//防止溢位</span><br><span class="line">        y = y * 10 + x % 10;</span><br><span class="line">        x /= 10;</span><br><span class="line">    &#125;</span><br><span class="line">    return y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Runtime: 20 ms, faster than 25.65% of C++ online submissions for Reverse Integer.<br>雖然寫的簡單，但是跑得有點慢就是了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Leetcode-7-Reverse-Integer&quot;&gt;&lt;a href=&quot;#Leetcode-7-Reverse-Integer&quot; class=&quot;headerlink&quot; title=&quot;[Leetcode] 7. Reverse Integer&quot;&gt;&lt;/a&gt;[Leet
      
    
    </summary>
    
    
      <category term="Leetcode" scheme="http://yoursite.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>[Leetcode 6]</title>
    <link href="http://yoursite.com/2018/09/29/leetcode-6/"/>
    <id>http://yoursite.com/2018/09/29/leetcode-6/</id>
    <published>2018-09-29T10:44:59.000Z</published>
    <updated>2018-10-01T06:30:56.145Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Leetcode-6-ZigZag-Conversion-題目解析-思路和代碼"><a href="#Leetcode-6-ZigZag-Conversion-題目解析-思路和代碼" class="headerlink" title="[Leetcode] 6. ZigZag Conversion 題目解析,思路和代碼"></a>[Leetcode] 6. ZigZag Conversion 題目解析,思路和代碼</h3><p>今天發現了<a href="https://leetcode-cn.com" target="_blank" rel="noopener">leetcode的簡中版</a> 以及 <a href="https://www.lintcode.com" target="_blank" rel="noopener">lintcode</a>。</p><p>The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)<br>将字符串 “PAYPALISHIRING” 以Z字形排列成给定的行数：</p><p>P &ensp; &ensp; A &ensp;&ensp;&ensp;H &ensp;&ensp; &ensp;N<br>A&ensp;P &ensp;L&ensp; S&ensp;I&ensp;&ensp; I &ensp; G<br>Y &ensp;&ensp;&ensp;  I &ensp;&ensp;&ensp;  R<br>之后从左往右，逐行读取字符：”PAHNAPLSIIGYIR”</p><p>实现一个将字符串进行指定行数变换的函数:<br>And then read line by line: “PAHNAPLSIIGYIR”      </p><p>Write the code that will take a string and make this conversion given a number of rows:   </p><p>string convert(string s, int numRows);  </p><p>Example 1:</p><p>Input: s = “PAYPALISHIRING”, numRows = 3<br>Output: “PAHNAPLSIIGYIR”  </p><p>P &ensp; &ensp; A &ensp;&ensp;&ensp;H &ensp;&ensp; &ensp;N<br>A&ensp;P &ensp;L&ensp; S&ensp;I&ensp;&ensp; I &ensp; G<br>Y &ensp;&ensp;&ensp;  I &ensp;&ensp;&ensp;  R  </p><p>Example 2:</p><p>Input: s = “PAYPALISHIRING”, numRows = 4<br>Output: “PINALSIGYAHRPI”<br>Explanation:</p><p>P  &ensp;&ensp;&ensp;&ensp;&ensp;I &ensp;&ensp; &ensp;&ensp;&ensp; N<br>A &ensp; L&ensp;&ensp;S &ensp;&ensp;&ensp; I &ensp; G<br>Y A&ensp;&ensp;&ensp;H &ensp;R<br>P   &ensp;&ensp;&ensp;&ensp;&ensp;I</p><p>0  &ensp;&ensp;&ensp;&ensp;&ensp;6 &ensp;&ensp; &ensp;&ensp;&ensp; 12<br>1 &ensp; 5&ensp;&ensp;7&ensp;&ensp;&ensp; 11&ensp;13<br>2 4&ensp;&ensp;&ensp; 8 &ensp;10<br>3   &ensp;&ensp;&ensp;&ensp;&ensp;9</p><p>其實這題就主要就是觀察規律，輸入的序列ｘ的輸出序列ｙ主要就是看</p><p> ( 順序 ) x%(numRows(直線)+ (numRows-2)(斜線))</p><p>跟 ( 第幾個迴圈 ) x/(numRows(直線)+ (numRows-2)(斜線))</p><p>一個勾勾(如上圖，０～５, 一個v)是一個迴圈。</p><p>官方的ｃ＋＋解答如下。</p><p>另外假如是以輸出的序列為程序中For的順序的話，則需考慮最後非完整的迴圈。</p><p>c++的code<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    string convert(string s, int numRows) &#123;</span><br><span class="line"></span><br><span class="line">        if (numRows == 1) return s;</span><br><span class="line"></span><br><span class="line">        string ret;</span><br><span class="line">        int n = s.size();</span><br><span class="line">        int cycleLen = 2 * numRows - 2;</span><br><span class="line"></span><br><span class="line">        for (int i = 0; i &lt; numRows; i++) &#123;</span><br><span class="line">            for (int j = 0; j + i &lt; n; j += cycleLen) &#123;</span><br><span class="line">                ret += s[j + i];//直線</span><br><span class="line">                if (i != 0 &amp;&amp; i != numRows - 1 &amp;&amp; j + cycleLen - i &lt; n)</span><br><span class="line">                    ret += s[j + cycleLen - i];//斜線</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>之後的解析都會是我自己寫的代碼。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Leetcode-6-ZigZag-Conversion-題目解析-思路和代碼&quot;&gt;&lt;a href=&quot;#Leetcode-6-ZigZag-Conversion-題目解析-思路和代碼&quot; class=&quot;headerlink&quot; title=&quot;[Leetcode] 6. 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tech News</title>
    <link href="http://yoursite.com/2018/09/28/tech-news/"/>
    <id>http://yoursite.com/2018/09/28/tech-news/</id>
    <published>2018-09-28T04:10:33.000Z</published>
    <updated>2018-10-04T02:03:35.396Z</updated>
    
    <content type="html"><![CDATA[<p>20180928:AR,VR,XR and AI相關的新聞連結</p><p>難怪之前Oculus 的CEO覺得Magic Leap的裝置很爛，可能有一部分原因是他們的成果發表會也在近期展開。</p><p>不過他們的產品和產品內的應用看起來真的還蠻有前景的。</p><p>另外．用搖桿操作的方式看起來好像也能做很多事。</p><ul><li><p><a href="https://chinese.engadget.com/2018/09/27/oculus-predicts-ultra-thin-vr-headsets/" target="_blank" rel="noopener">Oculus 預言超薄外型的 VR 眼鏡將會在該領域未來的發展中佔有一席之地</a></p></li><li><p><a href="https://chinese.engadget.com/2018/09/27/oculus-teases-hybrid-apps-that-merge-the-desktop-with-vr/" target="_blank" rel="noopener">Oculus 展示了融合 VR 和桌面的「Hybrid Apps」概念</a>    </p></li><li><p><a href="https://chinese.engadget.com/2018/09/27/star-wars-vader-immortal-oculus-quest/" target="_blank" rel="noopener">《Vader Immortal：星戰 VR 系列》將登陸 Oculus Quest</a></p></li><li><p><a href="https://chinese.engadget.com/2018/09/26/oculus-quest-hands-on/" target="_blank" rel="noopener">Oculus Quest 六自由度一體式 VR 裝置正式登場</a></p></li><li><p><a href="https://www.oculus.com/blog/rift-updates-at-oc5-new-games-and-core-software/" target="_blank" rel="noopener">Rift Updates @ OC5: New Games and Core Software</a></p></li></ul><p>AI相關的新聞:</p><ul><li><a href="https://chinese.engadget.com/2018/09/27/deepmind-unity-ai-machine-learning-environments/" target="_blank" rel="noopener">DeepMind 和 Unity 打算聯手推進 AI 研究發展</a></li></ul><p>看來之後 Machine Learning 強化的 Game AI 有可能被運用在現實生活中。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;20180928:AR,VR,XR and AI相關的新聞連結&lt;/p&gt;
&lt;p&gt;難怪之前Oculus 的CEO覺得Magic Leap的裝置很爛，可能有一部分原因是他們的成果發表會也在近期展開。&lt;/p&gt;
&lt;p&gt;不過他們的產品和產品內的應用看起來真的還蠻有前景的。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="Trend" scheme="http://yoursite.com/tags/Trend/"/>
    
  </entry>
  
  <entry>
    <title>IC Courses</title>
    <link href="http://yoursite.com/2018/09/26/IC-Course/"/>
    <id>http://yoursite.com/2018/09/26/IC-Course/</id>
    <published>2018-09-26T03:09:53.000Z</published>
    <updated>2018-10-04T02:04:23.650Z</updated>
    
    <content type="html"><![CDATA[<h3 id="IC設計和嵌入式相關課程"><a href="#IC設計和嵌入式相關課程" class="headerlink" title="IC設計和嵌入式相關課程"></a>IC設計和嵌入式相關課程</h3><p>這部分我沒有涉獵，之前無聊太閒幫別人找的，有興趣可以看一下。<br>不過有一部分都是簡體的，不反感的就查看一下吧。</p><p><a href="http://training.eeworld.com.cn/search?q=verilog" target="_blank" rel="noopener">電子工程世界大學堂</a><br><a href="http://www.digoboy.com/course/lists/29_59.html" target="_blank" rel="noopener">地瓜派課程</a><br><a href="http://www.kokojia.com/list/231.html" target="_blank" rel="noopener">課課家</a><br><a href="https://study.163.com/courses-search?keyword=ic" target="_blank" rel="noopener">網易精品課IC設計相關</a><br><a href="https://ke.qq.com/course/list?mt=1001&amp;st=2043" target="_blank" rel="noopener">騰訊課堂硬體開發相關</a><br>下面兩個論壇感覺東西都很多<br><a href="http://bbs.eetop.cn/" target="_blank" rel="noopener">ＥＴ創芯論壇</a><br><a href="http://www.ictown.com/" target="_blank" rel="noopener">IC TOWN</a><br><a href="https://forum.mianbaoban.cn/" target="_blank" rel="noopener">麵包版論壇</a>         </p><p>這部分是英文的<br><a href="https://www.fpga4student.com/p/verilog-project.html" target="_blank" rel="noopener">VERILOG PROJECT</a><br><a href="https://www.youtube.com/watch?v=eXb8prknDKg&amp;list=PLScWdLzHpkAfbPhzz1NKHDv2clv1SgsMo" target="_blank" rel="noopener">EDA Playground</a><br><a href="https://www.coursera.org/learn/intro-fpga-design-embedded-systems" target="_blank" rel="noopener">Introduction to FPGA Design for Embedded Systems</a><br><a href="https://onlinecourses.nptel.ac.in/noc17_cs21/preview" target="_blank" rel="noopener">Hardware Modeling Using Verilog</a><br><a href="https://www.quora.com/What-is-the-best-online-course-to-learn-system-verilog" target="_blank" rel="noopener">What is the best online course to learn system verilog?</a><br><a href="https://www.quora.com/What-are-the-best-MOOC-courses-to-take-for-a-job-in-the-VLSI-industry-back-or-front-end-of-digital-IC-design-or-verification" target="_blank" rel="noopener">What are the best MOOC courses to take for a job in the VLSI industry (back or front end of digital IC design or verification)?</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;IC設計和嵌入式相關課程&quot;&gt;&lt;a href=&quot;#IC設計和嵌入式相關課程&quot; class=&quot;headerlink&quot; title=&quot;IC設計和嵌入式相關課程&quot;&gt;&lt;/a&gt;IC設計和嵌入式相關課程&lt;/h3&gt;&lt;p&gt;這部分我沒有涉獵，之前無聊太閒幫別人找的，有興趣可以看一下。
      
    
    </summary>
    
    
      <category term="Hardware" scheme="http://yoursite.com/tags/Hardware/"/>
    
  </entry>
  
  <entry>
    <title>Deep Learning Path</title>
    <link href="http://yoursite.com/2018/09/25/Deep-Learning-Path/"/>
    <id>http://yoursite.com/2018/09/25/Deep-Learning-Path/</id>
    <published>2018-09-25T12:28:15.000Z</published>
    <updated>2018-10-04T02:03:56.196Z</updated>
    
    <content type="html"><![CDATA[<h2 id="深度學習的參考學習過程"><a href="#深度學習的參考學習過程" class="headerlink" title="深度學習的參考學習過程"></a>深度學習的參考學習過程</h2><p>這些是我個人計畫要重新學的，之前只有學NLP相關的。不過沒有很深入，呵呵。<br>所以可能還會有很多修改。<br>畢竟我比較眼高手低，所以肯定有很多不完備的地方。</p><p><a href="https://mooc.study.163.com/university/deeplearning_ai#/c" target="_blank" rel="noopener">學習課程的網址(免費版沒有作業)</a></p><p>深度學習課程的<a href="http://www.ai-start.com/dl2017/" target="_blank" rel="noopener">筆記</a></p><p>轉貼自:<a href="https://github.com/fengdu78/deeplearning_ai_books" target="_blank" rel="noopener">fengdu78’s github</a></p><p>課程中參考的<a href="https://github.com/fengdu78/deeplearning_ai_books/tree/master/%E5%8F%82%E8%80%83%E8%AE%BA%E6%96%87" target="_blank" rel="noopener">論文</a></p><p>assignments:   </p><ul><li><a href="https://github.com/AjeetGitHub2016/deeplearning.ai" target="_blank" rel="noopener">AjeetGitHub2016</a></li><li><a href="https://github.com/Gurupradeep/deeplearning.ai-Assignments" target="_blank" rel="noopener">Gurupradeep</a></li><li><a href="https://github.com/nandadeepd/deep-learning-coursera" target="_blank" rel="noopener">nandadeepd</a>   </li></ul><p>下兩個課程二擇一即可，我覺得。</p><p>CS224n: Natural Language Processing with Deep Learning<br><a href="https://www.youtube.com/watch?v=OQQ-W_63UgQ&amp;list=PL3FW7Lu3i5Jsnh1rnUwq_TcylNr7EkRe6" target="_blank" rel="noopener">youtube</a><br><a href="http://web.stanford.edu/class/cs224n/" target="_blank" rel="noopener">課程網頁</a><br><a href="http://www.mooc.ai/course/494" target="_blank" rel="noopener">中文免費課程</a></p><p>CS231n: Convolutional Neural Networks for Visual Recognition<br><a href="http://cs231n.stanford.edu/" target="_blank" rel="noopener">課程網頁</a><br><a href="http://www.mooc.ai/course/268" target="_blank" rel="noopener">中文免費課程</a></p><p>相關的Examples 和資源<br><a href="https://github.com/chiphuyen/stanford-tensorflow-tutorials" target="_blank" rel="noopener">stanford-tensorflow-tutorials</a><br><a href="https://github.com/aymericdamien/TensorFlow-Examples" target="_blank" rel="noopener">TensorFlow-Examples</a><br><a href="https://github.com/tensorflow/models" target="_blank" rel="noopener">TensorFlow-Models</a><br><a href="https://github.com/tmulc18/Distributed-TensorFlow-Guide" target="_blank" rel="noopener">distributeTensorflowExample</a><br><a href="https://github.com/Zehaos/MobileNet" target="_blank" rel="noopener">MobileNet build with Tensorflow</a><br><a href="https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample" target="_blank" rel="noopener">AndroidTensorFlowMachineLearningExample</a><br><a href="https://gitlab.com/archiekennedy/argon" target="_blank" rel="noopener">Argon Object Classifier on Android</a><br><a href="https://github.com/eriklindernoren/ML-From-Scratch" target="_blank" rel="noopener">ML-From-Scratch(直接使用代碼實現算法模型)</a><br><a href="https://toolbox.google.com/datasetsearch" target="_blank" rel="noopener">古歌的datasetsearch</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;深度學習的參考學習過程&quot;&gt;&lt;a href=&quot;#深度學習的參考學習過程&quot; class=&quot;headerlink&quot; title=&quot;深度學習的參考學習過程&quot;&gt;&lt;/a&gt;深度學習的參考學習過程&lt;/h2&gt;&lt;p&gt;這些是我個人計畫要重新學的，之前只有學NLP相關的。不過沒有很深入，
      
    
    </summary>
    
    
      <category term="ML" scheme="http://yoursite.com/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>[Leetcode 5]</title>
    <link href="http://yoursite.com/2018/09/24/Leetcode-5-Longest-Palindromic-Substring/"/>
    <id>http://yoursite.com/2018/09/24/Leetcode-5-Longest-Palindromic-Substring/</id>
    <published>2018-09-23T23:01:21.000Z</published>
    <updated>2018-10-04T02:02:21.363Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Leetcode-5-Longest-Palindromic-Substring-題目解析以及解題思路"><a href="#Leetcode-5-Longest-Palindromic-Substring-題目解析以及解題思路" class="headerlink" title="[Leetcode] 5.Longest Palindromic Substring 題目解析以及解題思路"></a>[Leetcode] 5.Longest Palindromic Substring 題目解析以及解題思路</h3><p>看來不能在頁面裡夾MathJax的script來顯示數學式子，要不然chrome瀏覽器會顯示被入侵或不安全。 呵呵<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;http://cdn.mathjax.org/mathjax</span><br><span class="line">/latest/MathJax.js?config=default&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>Given a string s, find the longest palindromic substring in s.</p><p> You may assume that the maximum length of s is 1000.   </p><p>解釋：找出輸入字串內長度最長的回文字串，預設的長度為1000。</p><p>Example 1:</p><p>Input: “babad”<br>Output: “bab”<br>Note: “aba” is also a valid answer.<br>Example 2:</p><p>Input: “cbbd”<br>Output: “bb”</p><p>思路(參考官方的<a href="https://leetcode.com/articles/longest-palindromic-substring/" target="_blank" rel="noopener">Solution</a>)：     </p><p>(1) 最長的相同字串 (原 string 和 reversed string):   </p><p>思路是字串反轉之後，回文的字串還是一樣的。   </p><p>不過有還是要確定反轉後的位置跟反轉前是吻合的。要不然就會有BUG。  </p><p>(2) 窮舉法 (Brute Force)   </p><p>這個主要就是全找出所有的組合然後確認是否回文。時間複雜度是最高的。</p><p>時間複雜度則是\( x^3 \)。   </p><p>(3) <a href="https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92" target="_blank" rel="noopener">Dynamic programing</a>:  </p><p>算是上面方法的升級版，主要就是因為回文的模式， abba 或 abcba之類的回文 bb 或 bcb也是回文。</p><p>所以就先找最小可能回文再擴大這樣。</p><p>(4) Expand Around Center:  </p><p>上面思路的升級版， 從中心擴展。中心有一個數或兩個數的區別，所以ｎ長度的中心會有2n-1個。   </p><p>空間的使用會比上面的方法要省，時間複雜度則是\( x^2 \)。                                 </p><p>(5) <a href="http://www.csie.ntnu.edu.tw/~u91029/Palindrome.html" target="_blank" rel="noopener">Manacher’s Algorithm:</a>   </p><p>上面思路的再升級板， 不過官方認為這樣經過複雜加工的答案一般人不能在45分鐘內想到並實作出來。</p><p>马拉车算法 Manacher‘s Algorithm 是用来查找一个字符串的最长回文子串的线性方法，由一个叫Manacher的人在1975年发明的，这个方法的最大贡献是在于将时间复杂度提升到了线性。<br>轉載自:<a href="http://windliang.cc/2018/08/05/leetCode-5-Longest-Palindromic-Substring/" target="_blank" rel="noopener">http://windliang.cc/2018/08/05/leetCode-5-Longest-Palindromic-Substring/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Leetcode-5-Longest-Palindromic-Substring-題目解析以及解題思路&quot;&gt;&lt;a href=&quot;#Leetcode-5-Longest-Palindromic-Substring-題目解析以及解題思路&quot; class=&quot;headerlin
      
    
    </summary>
    
    
      <category term="Leetcode" scheme="http://yoursite.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>[Leetcode 4]</title>
    <link href="http://yoursite.com/2018/09/22/Leetcode-4-Median-of-Two-Sorted-Arrays/"/>
    <id>http://yoursite.com/2018/09/22/Leetcode-4-Median-of-Two-Sorted-Arrays/</id>
    <published>2018-09-22T05:16:06.000Z</published>
    <updated>2018-10-04T02:02:26.153Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Leetcode-4-Median-of-Two-Sorted-Arrays"><a href="#Leetcode-4-Median-of-Two-Sorted-Arrays" class="headerlink" title="[Leetcode] 4.Median of Two Sorted Arrays"></a>[Leetcode] 4.Median of Two Sorted Arrays</h3><p>There are two sorted arrays nums1 and nums2 of size m and n respectively.</p><p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p><p>You may assume nums1 and nums2 cannot be both empty.</p><p>主要就是找出兩個非空整數陣列的中位數，時間複雜度最大為O(log (m+n))，　　　　　</p><p>因為時間複雜度已經有所限制，所以窮舉法或<a href="http://alrightchiu.github.io/SecondRound/comparison-sort-merge-sorthe-bing-pai-xu-fa.html" target="_blank" rel="noopener">Merge sort</a>就可能會超過時間。</p><p>在看過解法之後，似乎就只有使用<a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95" target="_blank" rel="noopener">binary search</a>的方法。</p><p>之後大概還是要能自己想出來就是了。 呵呵</p><p><a href="https://www.zhihu.com/question/293544553/answer/486737960" target="_blank" rel="noopener">知乎上有人表示: 他小學就覺得leetcode很好刷。看來我輸了，呵呵，人生很幽默。</a></p><p><a href="https://www.scratch-tw.org/" target="_blank" rel="noopener">不過現在也有專門給６歲以上的小或大朋友入門的程式設計玩具就是了，那就是scratch。</a></p><p>Example 1:</p><p>nums1 = [1, 3]<br>nums2 = [2]</p><p>The median is 2.0<br>Example 2:</p><p>nums1 = [1, 2]<br>nums2 = [3, 4]</p><p>The median is (2 + 3)/2 = 2.5</p><p>這題我的思路是先從兩陣列的中位數比大小，</p><p>比較大的就切半跟另一陣列的前後（相加的size還是要(m+n+1)/2)再比大小，</p><p>最後找到從前面數起最中間的一個或兩個數這樣。具體過程還要實際寫了再調整。<br><a href="https://leetcode.com/articles/median-of-two-sorted-arrays/" target="_blank" rel="noopener">官方的 Java soloution</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public double findMedianSortedArrays(int[] A, int[] B) &#123;</span><br><span class="line">        int m = A.length;//陣列A的長度</span><br><span class="line">        int n = B.length;//陣列B的長度</span><br><span class="line">        if (m &gt; n) &#123; // to ensure m&lt;=n 保證陣列A的長度&lt;=陣列B的長度</span><br><span class="line">            int[] temp = A; A = B; B = temp;//交換陣列</span><br><span class="line">            int tmp = m; m = n; n = tmp;//長度交換</span><br><span class="line">        &#125;</span><br><span class="line">        /*</span><br><span class="line">        len(left_A)=i,len(right_A)=m−i.</span><br><span class="line">        Note: when i=0, left_A is empty, and when i = m, right_A is empty.</span><br><span class="line">        接下來可查找 https://leetcode.com/articles/median-of-two-sorted-arrays/</span><br><span class="line">        的解題內容</span><br><span class="line">        */</span><br><span class="line">        int iMin = 0, iMax = m, halfLen = (m + n + 1) / 2;  </span><br><span class="line">        //主要二分查找的環節</span><br><span class="line">        //主要就是分別把兩個陣列分成兩個等長的數值總合較小和大的陣列</span><br><span class="line">        //較小的(左邊A+B(iMin))長度 ==數值總和較大(右邊A+B(iMax))長度(偶數長度)</span><br><span class="line">        while (iMin &lt;= iMax) &#123;</span><br><span class="line">            int i = (iMin + iMax) / 2; //初始為m/2 ,查找A[]的序列數</span><br><span class="line">            int j = halfLen - i; //初始為(n+1)/2,查找B[]的序列數</span><br><span class="line">            if (i &lt; iMax &amp;&amp; B[j-1] &gt; A[i])&#123;//一開始A[中間]&lt;B[中間]</span><br><span class="line">                iMin = i + 1; // i is too small</span><br><span class="line">            &#125;</span><br><span class="line">            else if (i &gt; iMin &amp;&amp; A[i-1] &gt; B[j]) &#123;//一開始A[中間]&lt;B[中間]</span><br><span class="line">                iMax = i - 1; // i is too big</span><br><span class="line">            &#125;</span><br><span class="line">            else &#123; // i is perfect 找到目標</span><br><span class="line">                int maxLeft = 0;</span><br><span class="line">                if (i == 0) &#123; maxLeft = B[j-1]; &#125;</span><br><span class="line">                else if (j == 0) &#123; maxLeft = A[i-1]; &#125;</span><br><span class="line">                else &#123; maxLeft = Math.max(A[i-1], B[j-1]); &#125;</span><br><span class="line">                if ( (m + n) % 2 == 1 ) &#123; return maxLeft; &#125;//總和長度為奇數情況</span><br><span class="line"></span><br><span class="line">                int minRight = 0;</span><br><span class="line">                if (i == m) &#123; minRight = B[j]; &#125;</span><br><span class="line">                else if (j == n) &#123; minRight = A[i]; &#125;</span><br><span class="line">                else &#123; minRight = Math.min(B[j], A[i]); &#125;</span><br><span class="line"></span><br><span class="line">                return (maxLeft + minRight) / 2.0;//總和長度為偶數情況</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return 0.0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Leetcode-4-Median-of-Two-Sorted-Arrays&quot;&gt;&lt;a href=&quot;#Leetcode-4-Median-of-Two-Sorted-Arrays&quot; class=&quot;headerlink&quot; title=&quot;[Leetcode] 4.Med
      
    
    </summary>
    
    
      <category term="Leetcode" scheme="http://yoursite.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>[Leetcode 3]</title>
    <link href="http://yoursite.com/2018/09/21/Leetcode-3-Longest-Substring-Without-Repeating-Characters/"/>
    <id>http://yoursite.com/2018/09/21/Leetcode-3-Longest-Substring-Without-Repeating-Characters/</id>
    <published>2018-09-21T06:19:55.000Z</published>
    <updated>2018-10-04T02:01:59.094Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Leetcode-3-Longest-Substring-Without-Repeating-Characters"><a href="#Leetcode-3-Longest-Substring-Without-Repeating-Characters" class="headerlink" title="[Leetcode ] 3.Longest Substring Without Repeating Characters"></a>[Leetcode ] 3.Longest Substring Without Repeating Characters</h3><p>Given a string, find the length of the longest substring without repeating characters.<br>題目會給一字串，傳回最大的不重複字串長度。<br>Example 1:</p><p>Input: “abcabcbb”<br>Output: 3<br>Explanation: The answer is “abc”, with the length of 3.    </p><p>Example 2:   </p><p>Input: “bbbbb”<br>Output: 1<br>Explanation: The answer is “b”, with the length of 1.   </p><p>Example 3:</p><p>Input: “pwwkew”<br>Output: 3<br>Explanation: The answer is “wke”, with the length of 3.<br>　　　　　　　Note that the answer must be a substring,<br>　　　　　　　“pwke” is a subsequence and not a substring.  </p><p>此連結為原題的題目以及Java解:<br><a href="https://leetcode.com/articles/longest-substring-without-repeating-characters/" target="_blank" rel="noopener">https://leetcode.com/articles/longest-substring-without-repeating-characters/</a></p><p>上面連結內的代碼可以順便複習下怎樣計算時間複雜度跟空間複雜度。<br>官方給的解法主要就是暴力破解(窮舉法)跟滑動窗口法。</p><p>C++的code , 可能有很多bug，用官方第三種方法的思路實作的，呵呵。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">  int lengthOfLongestSubstring(string s) &#123;</span><br><span class="line"></span><br><span class="line">        vector&lt;int&gt; index(128);</span><br><span class="line">        int ans = 0;</span><br><span class="line"></span><br><span class="line">        for (int j = 0, i = 0; j &lt; s.length(); j++) &#123;</span><br><span class="line">            i = std::max(index[s.at(j)], i);</span><br><span class="line">            ans = std::max(ans, j - i + 1);</span><br><span class="line">            index[s.at(j)] = j + 1;</span><br><span class="line">        &#125;</span><br><span class="line">        return ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>Python的code, 思路其實也跟C++的寫法一樣，只是是用Dictornary實現<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">   def lengthOfLongestSubstring(self, s):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        :type s: str</span><br><span class="line">        :rtype: int</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        index=&#123;&#125;</span><br><span class="line">        ans=0</span><br><span class="line">        tmp=-1</span><br><span class="line">        for i in range(len(s)):</span><br><span class="line">            if s[i] in index and index[s[i]]&gt;tmp:</span><br><span class="line">                tmp=index[s[i]]</span><br><span class="line">            index[s[i]]=i</span><br><span class="line">            ans=max(ans,(i-tmp))</span><br><span class="line">        return ans</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Leetcode-3-Longest-Substring-Without-Repeating-Characters&quot;&gt;&lt;a href=&quot;#Leetcode-3-Longest-Substring-Without-Repeating-Characters&quot; clas
      
    
    </summary>
    
    
      <category term="Leetcode" scheme="http://yoursite.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>機器學習二次入門</title>
    <link href="http://yoursite.com/2018/09/20/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92%E4%BA%8C%E6%AC%A1%E5%85%A5%E9%96%80/"/>
    <id>http://yoursite.com/2018/09/20/機器學習二次入門/</id>
    <published>2018-09-20T11:58:02.000Z</published>
    <updated>2018-10-04T02:03:48.071Z</updated>
    
    <content type="html"><![CDATA[<h3 id="機器學習二次入門：大致方向"><a href="#機器學習二次入門：大致方向" class="headerlink" title="機器學習二次入門：大致方向"></a>機器學習二次入門：大致方向</h3><p>這邊會以史丹佛大學2014(吳恩達)機器學習, deeplearning.ai的深度學習課程為主，   </p><p>主要參照黃海厰的課程筆記以及視頻為主。</p><p>輔以Deeplearningbook參照。之後會以CS224n &amp; CS231n 為主。</p><p>因為是二次入門，所以速度會比較快。</p><p>==============================================================================</p><p>參考連結:<br>Deeplearningbook:         <a href="http://www.deeplearningbook.org/" target="_blank" rel="noopener">http://www.deeplearningbook.org/</a><br>Deeplearningbook-chinese: <a href="https://github.com/exacity/deeplearningbook-chinese" target="_blank" rel="noopener">https://github.com/exacity/deeplearningbook-chinese</a><br>黃海厰的課程筆記:          <a href="https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes" target="_blank" rel="noopener">https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes</a><br>面試相關連結: <a href="https://github.com/imhuay/Algorithm_Interview_Notes-Chinese" target="_blank" rel="noopener">https://github.com/imhuay/Algorithm_Interview_Notes-Chinese</a><br>這個結構還在調整，需要自己點進去看。<br>機器學習大概分為電腦視覺(最熱門), 自然語言處理, 語音, 數據挖掘與分析(相關)等幾個應用方向，<br>也有以強化學習為主的深度學習方向 ( 像是 DeepMind 的 Game AI )。<br>建議先選一個教材跟一個教材為主就好，貪多嚼不爛。<br>之後做 Project 再根據需求學需要的就可以了，畢竟很難短時間每個部分都學完。<br>每年也有各種 paper , 成果和框架發表，學不完的。<br>下面是國家高速網路以及計算中心的書單: <a href="http://aiel.nchc.org.tw/researcher.aspx" target="_blank" rel="noopener">http://aiel.nchc.org.tw/researcher.aspx</a><br>李弘毅老師的油管:<a href="https://www.youtube.com/channel/UC2ggjtuuWvxrHHHiaDH1dlQ/featured" target="_blank" rel="noopener">https://www.youtube.com/channel/UC2ggjtuuWvxrHHHiaDH1dlQ/featured</a><br>林軒田老師的頁面:<a href="https://www.csie.ntu.edu.tw/~htlin/mooc/" target="_blank" rel="noopener">https://www.csie.ntu.edu.tw/~htlin/mooc/</a>  </p><p>現在太多人在學，資料教材也很豐富，能有差別的大概就是實作經驗, coding的能力跟即戰力就是了。<br>可能定理要能推，代碼能寫，起碼要有幾個toy projects。當然有線上的產品或相關的論文是最好的。</p><p>==============================================================================</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;機器學習二次入門：大致方向&quot;&gt;&lt;a href=&quot;#機器學習二次入門：大致方向&quot; class=&quot;headerlink&quot; title=&quot;機器學習二次入門：大致方向&quot;&gt;&lt;/a&gt;機器學習二次入門：大致方向&lt;/h3&gt;&lt;p&gt;這邊會以史丹佛大學2014(吳恩達)機器學習, de
      
    
    </summary>
    
    
      <category term="ML" scheme="http://yoursite.com/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>[Leetcode 2]</title>
    <link href="http://yoursite.com/2018/09/20/Leetcode-2-Add-Two-Numbers/"/>
    <id>http://yoursite.com/2018/09/20/Leetcode-2-Add-Two-Numbers/</id>
    <published>2018-09-20T00:14:26.000Z</published>
    <updated>2018-10-04T02:02:00.968Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Leetcode-2-Add-Two-Numbers"><a href="#Leetcode-2-Add-Two-Numbers" class="headerlink" title="[Leetcode] 2. Add Two Numbers"></a>[Leetcode] 2. Add Two Numbers</h3><p>You are given two non-empty linked lists representing two non-negative integers.</p><p>The digits are stored in reverse order and each of their nodes contain a single digit.</p><p>Add the two numbers and return it as a linked list.</p><p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p><p>輸入是兩個正整數(加上0)的連結串列. 每個數字是反向存儲的.</p><p>輸出是把兩個數相加然後以相同的格式輸出.</p><p>假設這兩個數除了0這個數之外不會在數目前補零 (像 12-&gt; 012 或 9-&gt; 009).</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h3><p>Input: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</p><p>Output: 7 -&gt; 0 -&gt; 8</p><p>Explanation: 342 + 465 = 807.</p><p> <strong>沒有上面這個解釋大概要想很久就是了</strong></p><p> ============================================================================</p><p> ListNode的相關知識可參考下方連接:</p><p> <a href="http://alrightchiu.github.io/SecondRound/linked-list-introjian-jie.html" target="_blank" rel="noopener">http://alrightchiu.github.io/SecondRound/linked-list-introjian-jie.html</a></p><p> <a href="http://alrightchiu.github.io/SecondRound/linked-list-xin-zeng-zi-liao-shan-chu-zi-liao-fan-zhuan.html" target="_blank" rel="noopener">http://alrightchiu.github.io/SecondRound/linked-list-xin-zeng-zi-liao-shan-chu-zi-liao-fan-zhuan.html</a></p><p> <a href="https://segmentfault.com/a/1190000002490878" target="_blank" rel="noopener">https://segmentfault.com/a/1190000002490878</a></p><p> <a href="https://www.itread01.com/content/1502971323.html" target="_blank" rel="noopener">https://www.itread01.com/content/1502971323.html</a></p><p> ==========================================================================</p><p>沒有考慮很多情況的C++版本，有Bug的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * struct ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode *next;</span><br><span class="line"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span><br><span class="line"> * &#125;;</span><br><span class="line"> */</span><br><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) &#123;</span><br><span class="line">      ListNode *Ans = new ListNode(0);</span><br><span class="line">        ListNode *processDigit = Ans;</span><br><span class="line">        int carryBlock = 0;//進位</span><br><span class="line">        while(l1 != NULL || l2 != NULL) &#123;</span><br><span class="line">            processDigit-&gt;next = new ListNode((carryBlock + l1-&gt;val + l2-&gt;val) % 10);</span><br><span class="line">            carryBlock = (carryBlock + l1-&gt;val + l2-&gt;val) / 10;</span><br><span class="line">            processDigit = processDigit-&gt;next;</span><br><span class="line">            l1 = l1-&gt;next;</span><br><span class="line">            l2 = l2-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        return Ans-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>考慮一位數以及兩位數輸入以及溢位的C++版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * struct ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode *next;</span><br><span class="line"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span><br><span class="line"> * &#125;;</span><br><span class="line"> */</span><br><span class="line"> class Solution &#123;</span><br><span class="line"> public:</span><br><span class="line"> ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) &#123;</span><br><span class="line">  ListNode *Ans = new ListNode(0);</span><br><span class="line">  ListNode *processDigit = Ans;</span><br><span class="line">  int carryBlock = 0;//進位</span><br><span class="line">  while(l1 != NULL || l2 != NULL) &#123;</span><br><span class="line">       int inputDigitA = (l1!= NULL) ? l1-&gt;val : 0,</span><br><span class="line">           inputDigitB = (l2!= NULL) ? l2-&gt;val : 0,</span><br><span class="line">           addDigit = carryBlock + inputDigitA + inputDigitB;</span><br><span class="line">       processDigit =processDigit-&gt;next = new ListNode( addDigit % 10);</span><br><span class="line">       carryBlock = addDigit / 10;</span><br><span class="line">       if(l1!= NULL)l1 = l1-&gt;next;</span><br><span class="line">       if(l2!= NULL)l2 = l2-&gt;next;</span><br><span class="line">   &#125;</span><br><span class="line">   if(carryBlock&gt;0)&#123;</span><br><span class="line">       processDigit = processDigit-&gt;next= new ListNode(carryBlock);</span><br><span class="line">   &#125;</span><br><span class="line">   return Ans-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>網路上看到的一個很聰明地遞迴 Java寫法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span><br><span class="line">class Solution &#123;</span><br><span class="line">    public ListNode addTwoNumbers(ListNode l1, ListNode l2) &#123;</span><br><span class="line">      if (l1 == null || l2 == null) &#123;</span><br><span class="line">            return l1 == null ? l2 : l1;</span><br><span class="line">        &#125;</span><br><span class="line">        int value = l1.val + l2.val;</span><br><span class="line">        ListNode result = new ListNode(value % 10);</span><br><span class="line">        result.next = addTwoNumbers(l1.next, l2.next);</span><br><span class="line">        if (value &gt;= 10) &#123;</span><br><span class="line">            result.next = addTwoNumbers(new ListNode(value / 10), result.next);</span><br><span class="line">        &#125;</span><br><span class="line">        return result;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>網路上看到python的另類解法<br>轉貼自:<a href="https://www.jianshu.com/p/5d8f13225adf" target="_blank" rel="noopener">https://www.jianshu.com/p/5d8f13225adf</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    # @param &#123;ListNode&#125; l1</span><br><span class="line">    # @param &#123;ListNode&#125; l2</span><br><span class="line">    # @return &#123;ListNode&#125;</span><br><span class="line">    def addTwoNumbers(self, l1, l2):</span><br><span class="line">        def to_int(l):</span><br><span class="line">            return l.val + 10 * to_int(l.next) if l else 0</span><br><span class="line">        def to_list(val):</span><br><span class="line">            l = ListNode(val % 10)</span><br><span class="line">            if val &gt; 9:</span><br><span class="line">                l.next = to_list(val / 10)</span><br><span class="line">            return l</span><br><span class="line">        return to_list(to_int(l1) + to_int(l2))</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Leetcode-2-Add-Two-Numbers&quot;&gt;&lt;a href=&quot;#Leetcode-2-Add-Two-Numbers&quot; class=&quot;headerlink&quot; title=&quot;[Leetcode] 2. Add Two Numbers&quot;&gt;&lt;/a&gt;[Leet
      
    
    </summary>
    
    
      <category term="Leetcode" scheme="http://yoursite.com/tags/Leetcode/"/>
    
  </entry>
  
</feed>
